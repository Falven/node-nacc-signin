$breakpoints: (
  "mobile": 0,
  "tablet": 736px,
  "laptop": 1012px,
  "desktop": 1420px
);

@mixin respond-min($key) {
  @if map-has-key($breakpoints, $key) {
    @media only screen
    and (min-width: #{inspect(map-get($breakpoints, $key))}) {
      @content;
    }
  }
  @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Please make sure it is defined in `$breakpoints` map.";
  }
}

@mixin respond-min-2x($key) {
  @if map-has-key($breakpoints, $key) {
    $br: inspect(map-get($breakpoints, $key));
    @media
    only screen and (min-width: #{$br}) and (min-resolution: 1.5dppx),
    only screen and (min-width: #{$br}) and (min-resolution: 144dpi) {
      @content;
    }
  }
  @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Please make sure it is defined in `$breakpoints` map.";
  }
}

@include respond-min("tablet") {
  #index, #admin {
    .wrapper {
      @include wrapper(40%);
    }
  }
  @include keypad-form-dimensions($base-line-height, $base-line-height * 4, 2px);
}

@include respond-min("laptop") {
  #index, #admin {
    .wrapper {
      @include wrapper(40%);
    }
  }
  @include keypad-form-dimensions($base-line-height, $base-line-height * 4, 4px);
}

@include respond-min("desktop") {
  #index, #admin {
    .wrapper {
      @include wrapper(55%);
    }
  }
  @include keypad-form-dimensions($base-line-height, $base-line-height * 8, 6px);
}